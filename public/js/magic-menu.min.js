(function($){
    'use strict';

    var Menu = {};

    Menu = (function() {

        function Menu(element, options) {

            var self = this;
            self.$menu = $(element);
            self.options = self.setOptions(options);

            self.init();
            self.match();
            self.initEvents();
        }

        return Menu;

    }());
    Menu.prototype.setOptions = function(options){
        var self = this;
        self.name = options.name || 'default';
        self.moreHtml = options.moreHtml || 'More...';
        return self;
    }
    Menu.prototype.init = function(){
        var self = this;
        self.$item = self.$menu.children();
        self.$link = self.$item.children('a');
        self.$menu.addClass('magic-menu');
        self.$item.addClass('magic-menu__item');
        self.$link.addClass('magic-menu__link');
        self.$moreMenu = '';
        var $last = self.$item.last(),
            $item = $last.clone();

        $item.addClass('magic-menu__item_more').children('a').html(self.options.moreHtml);
        $last.after($item);

        $item.append('<ul class="magic-menu__more-menu"></ul>');
        self.$moreMenu = $item.find('.magic-menu__more-menu');
        self.$itemMore = self.$item.last().next();
        self.$item = self.$item.not('.magic-menu__item_more');

        self.$item.each(function(){
            var $item = $(this).clone();
            $item.removeClass('magic-menu__item').children('a');
            self.$moreMenu.append($item);
        });
    }
    Menu.prototype.match = function(){

        var self = this,
            widthMenu = self.$menu.outerWidth(),
            $subItem = self.$moreMenu.children('li'),
            $item = self.$item,
            $itemMore = self.$itemMore,
            widthItems = 0,
            length = $item.length - 1,
            isVisibleMore = false,
            excessSize = 0;

        $item.each(function () {
            widthItems += $(this).outerWidth();
            $(this).data('width', $(this).outerWidth());
        });
        widthItems += $itemMore.outerWidth();

        for (var i = length; i >= 0; i--) {
            excessSize += $item.eq(i).outerWidth();

            if (widthItems - excessSize + $item.eq(i).outerWidth() >= widthMenu) {
                $item.eq(i).hide();
                $subItem.eq(i).show();
            } else {
                $item.eq(i).show();
                $subItem.eq(i).hide();
            }

            if ($item.is(':hidden')) {
                $itemMore.show();
            } else {
                $itemMore.hide();
            }
        }
    }
    Menu.prototype.initEvents = function(){

        var self = this,
            $win = $(window);

        $win.on('resize', function(){
            self.match();
        });
    }
    $.fn.magicMenu = function (options) {

        var menu = this,
            opt = options,
            length = menu.length,
            i;

        if(length){
            for(i = 0; i < length; i++){
                menu[i].menu = new Menu(menu[i], opt);
            }
        }else{
            console.error('no elements');
        }
        return menu;




        // $(window).on('resize', self.match);
    };

})($);


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJtYWdpYy1tZW51LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigkKXtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgTWVudSA9IHt9O1xuXG4gICAgTWVudSA9IChmdW5jdGlvbigpIHtcblxuICAgICAgICBmdW5jdGlvbiBNZW51KGVsZW1lbnQsIG9wdGlvbnMpIHtcblxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgc2VsZi4kbWVudSA9ICQoZWxlbWVudCk7XG4gICAgICAgICAgICBzZWxmLm9wdGlvbnMgPSBzZWxmLnNldE9wdGlvbnMob3B0aW9ucyk7XG5cbiAgICAgICAgICAgIHNlbGYuaW5pdCgpO1xuICAgICAgICAgICAgc2VsZi5tYXRjaCgpO1xuICAgICAgICAgICAgc2VsZi5pbml0RXZlbnRzKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gTWVudTtcblxuICAgIH0oKSk7XG4gICAgTWVudS5wcm90b3R5cGUuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uKG9wdGlvbnMpe1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHNlbGYubmFtZSA9IG9wdGlvbnMubmFtZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHNlbGYubW9yZUh0bWwgPSBvcHRpb25zLm1vcmVIdG1sIHx8ICdNb3JlLi4uJztcbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfVxuICAgIE1lbnUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHNlbGYuJGl0ZW0gPSBzZWxmLiRtZW51LmNoaWxkcmVuKCk7XG4gICAgICAgIHNlbGYuJGxpbmsgPSBzZWxmLiRpdGVtLmNoaWxkcmVuKCdhJyk7XG4gICAgICAgIHNlbGYuJG1lbnUuYWRkQ2xhc3MoJ21hZ2ljLW1lbnUnKTtcbiAgICAgICAgc2VsZi4kaXRlbS5hZGRDbGFzcygnbWFnaWMtbWVudV9faXRlbScpO1xuICAgICAgICBzZWxmLiRsaW5rLmFkZENsYXNzKCdtYWdpYy1tZW51X19saW5rJyk7XG4gICAgICAgIHNlbGYuJG1vcmVNZW51ID0gJyc7XG4gICAgICAgIHZhciAkbGFzdCA9IHNlbGYuJGl0ZW0ubGFzdCgpLFxuICAgICAgICAgICAgJGl0ZW0gPSAkbGFzdC5jbG9uZSgpO1xuXG4gICAgICAgICRpdGVtLmFkZENsYXNzKCdtYWdpYy1tZW51X19pdGVtX21vcmUnKS5jaGlsZHJlbignYScpLmh0bWwoc2VsZi5vcHRpb25zLm1vcmVIdG1sKTtcbiAgICAgICAgJGxhc3QuYWZ0ZXIoJGl0ZW0pO1xuXG4gICAgICAgICRpdGVtLmFwcGVuZCgnPHVsIGNsYXNzPVwibWFnaWMtbWVudV9fbW9yZS1tZW51XCI+PC91bD4nKTtcbiAgICAgICAgc2VsZi4kbW9yZU1lbnUgPSAkaXRlbS5maW5kKCcubWFnaWMtbWVudV9fbW9yZS1tZW51Jyk7XG4gICAgICAgIHNlbGYuJGl0ZW1Nb3JlID0gc2VsZi4kaXRlbS5sYXN0KCkubmV4dCgpO1xuICAgICAgICBzZWxmLiRpdGVtID0gc2VsZi4kaXRlbS5ub3QoJy5tYWdpYy1tZW51X19pdGVtX21vcmUnKTtcblxuICAgICAgICBzZWxmLiRpdGVtLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciAkaXRlbSA9ICQodGhpcykuY2xvbmUoKTtcbiAgICAgICAgICAgICRpdGVtLnJlbW92ZUNsYXNzKCdtYWdpYy1tZW51X19pdGVtJykuY2hpbGRyZW4oJ2EnKTtcbiAgICAgICAgICAgIHNlbGYuJG1vcmVNZW51LmFwcGVuZCgkaXRlbSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBNZW51LnByb3RvdHlwZS5tYXRjaCA9IGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICAgICAgd2lkdGhNZW51ID0gc2VsZi4kbWVudS5vdXRlcldpZHRoKCksXG4gICAgICAgICAgICAkc3ViSXRlbSA9IHNlbGYuJG1vcmVNZW51LmNoaWxkcmVuKCdsaScpLFxuICAgICAgICAgICAgJGl0ZW0gPSBzZWxmLiRpdGVtLFxuICAgICAgICAgICAgJGl0ZW1Nb3JlID0gc2VsZi4kaXRlbU1vcmUsXG4gICAgICAgICAgICB3aWR0aEl0ZW1zID0gMCxcbiAgICAgICAgICAgIGxlbmd0aCA9ICRpdGVtLmxlbmd0aCAtIDEsXG4gICAgICAgICAgICBpc1Zpc2libGVNb3JlID0gZmFsc2UsXG4gICAgICAgICAgICBleGNlc3NTaXplID0gMDtcblxuICAgICAgICAkaXRlbS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHdpZHRoSXRlbXMgKz0gJCh0aGlzKS5vdXRlcldpZHRoKCk7XG4gICAgICAgICAgICAkKHRoaXMpLmRhdGEoJ3dpZHRoJywgJCh0aGlzKS5vdXRlcldpZHRoKCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgd2lkdGhJdGVtcyArPSAkaXRlbU1vcmUub3V0ZXJXaWR0aCgpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSBsZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICBleGNlc3NTaXplICs9ICRpdGVtLmVxKGkpLm91dGVyV2lkdGgoKTtcblxuICAgICAgICAgICAgaWYgKHdpZHRoSXRlbXMgLSBleGNlc3NTaXplICsgJGl0ZW0uZXEoaSkub3V0ZXJXaWR0aCgpID49IHdpZHRoTWVudSkge1xuICAgICAgICAgICAgICAgICRpdGVtLmVxKGkpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAkc3ViSXRlbS5lcShpKS5zaG93KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICRpdGVtLmVxKGkpLnNob3coKTtcbiAgICAgICAgICAgICAgICAkc3ViSXRlbS5lcShpKS5oaWRlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICgkaXRlbS5pcygnOmhpZGRlbicpKSB7XG4gICAgICAgICAgICAgICAgJGl0ZW1Nb3JlLnNob3coKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJGl0ZW1Nb3JlLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBNZW51LnByb3RvdHlwZS5pbml0RXZlbnRzID0gZnVuY3Rpb24oKXtcblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICAkd2luID0gJCh3aW5kb3cpO1xuXG4gICAgICAgICR3aW4ub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBzZWxmLm1hdGNoKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAkLmZuLm1hZ2ljTWVudSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICAgICAgdmFyIG1lbnUgPSB0aGlzLFxuICAgICAgICAgICAgb3B0ID0gb3B0aW9ucyxcbiAgICAgICAgICAgIGxlbmd0aCA9IG1lbnUubGVuZ3RoLFxuICAgICAgICAgICAgaTtcblxuICAgICAgICBpZihsZW5ndGgpe1xuICAgICAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgIG1lbnVbaV0ubWVudSA9IG5ldyBNZW51KG1lbnVbaV0sIG9wdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignbm8gZWxlbWVudHMnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWVudTtcblxuXG5cblxuICAgICAgICAvLyAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIHNlbGYubWF0Y2gpO1xuICAgIH07XG5cbn0pKCQpO1xuXG4iXSwiZmlsZSI6Im1hZ2ljLW1lbnUubWluLmpzIn0=
